Description: >

  AWS Senario 01 EC2

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  InstanceType:
    Description: Which instance type should we use to build the GateKeeper cluster?
    Type: String
    Default: t2.micro

  ClusterSize:
    Description: How many GateKeeper hosts do you want to initially deploy?
    Type: Number
    Default: 1

  Subnet:
    Description: Choose which subnets this GateKeeper should be deployed to
    Type: AWS::EC2::Subnet::Id

  SecurityGroup:
    Description: Select the Security Group to use for the GateKeeper hosts
    Type: AWS::EC2::SecurityGroup::Id


Mappings:

  AWSRegionToAMI:
    us-east-1:
      AMI: ami-eca289fb
    us-east-2:
      AMI: ami-446f3521
    us-west-1:
      AMI: ami-9fadf8ff
    us-west-2:
      AMI: ami-7abc111a
    eu-west-1:
      AMI: ami-a1491ad2
    eu-central-1:
      AMI: ami-54f5303b
    ap-northeast-1:
      AMI: ami-9cd57ffd
    ap-southeast-1:
      AMI: ami-a900a3ca
    ap-southeast-2:
      AMI: ami-5781be34

Resources:

  GateKeeperRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: !Sub ${EnvironmentName}-GateKeeperRole-${AWS::Region}
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                    "Service": "ec2.amazonaws.com"
                }
            }]
        }
      Policies:
        - PolicyName: gatekeeper-service
          PolicyDocument: |
            {
                "Statement": [{
                    "Effect": "Allow",
                    "Action": [
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                    ],
                    "Resource": "*"
                }]
            }


  GateKeeperInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref GateKeeperRole


  GateKeeperLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:  !FindInMap [AWSRegionToAMI, !Ref "AWS::Region", AMI]
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref SecurityGroup
      IamInstanceProfile: !Ref GateKeeperInstanceProfile
      UserData:
        "Fn::Base64": !Sub |
          #!/bin/bash
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource GateKeeperLaunchConfiguration
          /opt/aws/bin/cfn-signal -e $? --region ${AWS::Region} --stack ${AWS::StackName} --resource GateKeeperAutoScalingGroup


  # GateKeeperAutoScalingGroup:
  #   Type: AWS::AutoScaling::AutoScalingGroup
  #   Properties:
  #     VPCZoneIdentifier:
  #       - !Ref Subnet
  #     LaunchConfigurationName: !Ref GateKeeperLaunchConfiguration
  #     MinSize: !Ref ClusterSize
  #     MaxSize: !Ref ClusterSize
  #     DesiredCapacity: !Ref ClusterSize
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${EnvironmentName} GateKeeper host
  #         PropagateAtLaunch: true
  #   CreationPolicy:
  #     ResourceSignal:
  #       Timeout: PT15M
  #   UpdatePolicy:
  #     AutoScalingRollingUpdate:
  #       MinInstancesInService: 1
  #       MaxBatchSize: 1
  #       PauseTime: PT15M
  #       WaitOnResourceSignals: true
